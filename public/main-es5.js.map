{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/about/about.component.ts","webpack:///src/app/about/about.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth.guard.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/legal/legal.component.ts","webpack:///src/app/legal/legal.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/reset-request/reset-request.component.ts","webpack:///src/app/reset-request/reset-request.component.html","webpack:///src/app/reset/reset.component.ts","webpack:///src/app/reset/reset.component.html","webpack:///src/app/user/user.component.ts","webpack:///src/app/user/user.component.html","webpack:///src/app/userservice.service.ts","webpack:///src/app/validate.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AboutComponent","selector","templateUrl","styleUrls","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","AppModule","declarations","providers","bootstrap","AuthGuard","userservice","router","loggedIn","navigate","providedIn","HomeComponent","authService","LegalComponent","LoginComponent","flashMessage","user","email","password","authenticateUser","subscribe","data","success","storeUserData","token","show","cssClass","timeout","msg","onLoginSubmit","NavbarComponent","flashMessge","logout","RegisterComponent","validateService","class","emailconf","passwordconf","validateRegister","validateEmail","match","Number","registerUser","err","onRegisterSubmit","ResetRequestComponent","resetRequest","onResetRequestSubmit","ResetComponent","route","queryParamMap","params","get","undefined","reset","onResetSubmit","UserComponent","getUser","dest","destination","search","like","onCrushSubmit","UserserviceService","http","appserver","headers","append","post","pipe","res","json","localStorage","setItem","JSON","stringify","authToken","getItem","destCode","loadToken","receiver","string","clear","ValidateService","re","test","environment","production","bootstrapModule","catch","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-navbar></app-navbar>\n<div class=\"container addpadding\">\n    <div class=\"jumbotron\">\n        <h1 class=\"display-3\">MidMatch</h1>\n        <p class=\"lead\">A simple singles pairing site for MIDS</p>\n        <hr class=\"my-4\">\n        <p style=\"font-size:larger\">Welcome to MidMatch! Inspired by UMD's TerpMatch and Dartmouth's Last Chances, this is a\n            Mids dating site with a fun twist; it's not going to be available forever! Matches are made by crushing on\n            someone, which is done by typing their alpha code into a box. Your crush will be anonymously notified that someone likes them. If your crush 'likes' you back, you will both be emailed about your new connection.\n            There are no takebacks or unmatches!\n            <br>\n            <br>\n            You will need to verify your school email address, as that is the only way to ensure only mids use this.\n            <br>\n            <br>\n            #RaisingMorale<br>\n            <!-- -The Oracle -->\n        </p>\n        <p class=\"lead\">\n          <a class=\"btn btn-primary btn-large\" [routerLink]=\"['/register']\" role=\"button\">Get Started</a>\n        </p>\n      </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { UserComponent } from './user/user.component';\nimport { AboutComponent } from './about/about.component';\nimport { AuthGuard } from './auth.guard';\nimport { ResetComponent } from './reset/reset.component';\nimport { ResetRequestComponent } from './reset-request/reset-request.component';\nimport { LegalComponent } from './legal/legal.component';\n\nconst routes: Routes = [\n  {path:'', component: HomeComponent},\n  {path:'register', component: RegisterComponent},\n  {path: 'about', component: AboutComponent},\n  {path:'login', component: LoginComponent},\n  {path:'reset', component: ResetComponent},\n  {path:'resetRequest', component: ResetRequestComponent},\n  {path: 'legal', component: LegalComponent},\n  {path: 'user', component: UserComponent, canActivate:[AuthGuard]}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'MidMatch';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { UserComponent } from './user/user.component';\nimport { NavbarComponent } from './navbar/navbar.component';\n\nimport { FlashMessagesModule } from 'angular2-flash-messages';\nimport { UserserviceService } from './userservice.service';\nimport { ValidateService } from './validate.service';\nimport { AuthGuard } from './auth.guard';\nimport { HttpModule } from '@angular/http';\nimport { AboutComponent } from './about/about.component';\nimport { FormsModule } from '@angular/forms';\nimport { ResetComponent } from './reset/reset.component';\nimport { ResetRequestComponent } from './reset-request/reset-request.component';\nimport { CountdownModule } from 'ngx-countdown-2';\nimport { LegalComponent } from './legal/legal.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    RegisterComponent,\n    UserComponent,\n    NavbarComponent,\n    AboutComponent,\n    ResetComponent,\n    ResetRequestComponent,\n    LegalComponent\n  ],\n  imports: [\n    FormsModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpModule,\n    FlashMessagesModule.forRoot()\n  ],\n  providers: [UserserviceService, ValidateService, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { UserserviceService } from './userservice.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private userservice: UserserviceService, private router:Router){\n\n  }\n    canActivate() {\n      if(this.userservice.loggedIn()) {\n        return true;\n      } else {\n        this.router.navigate(['/login']);\n        return false;\n      }\n    }\n  \n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { UserserviceService } from '../userservice.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(public authService: UserserviceService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"flex-center position-ref full-height\">\n    <div class=\"thecontent\">\n\n        <div class=\"title m-b-md\">\n            MidMatch\n        </div>\n        <div class='end'>\n            v2: Accounts Reset!<br>\n            Ending: August 28, 2020\n        </div>\n        <div class=\"links\">\n            <a [routerLink]=\"['/about']\">How It Works</a>\n            <a *ngIf=\"!authService.loggedIn()\" [routerLink]=\"['/login']\">Login</a>\n            <a *ngIf=\"!authService.loggedIn()\" [routerLink]=\"['/register']\">Register</a>\n            <a *ngIf=\"authService.loggedIn()\" [routerLink]=\"['/user']\">Match</a><br><br>\n            <a [routerLink]=\"['/legal']\">Regulatory</a>\n        </div>\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-legal',\n  templateUrl: './legal.component.html',\n  styleUrls: ['./legal.component.css']\n})\nexport class LegalComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-navbar></app-navbar>\n<div class=\"container addpadding\">\n    <div class=\"jumbotron\">\n        <h1 class=\"display-3\">Regulatory Info</h1>\n        <p class=\"lead\">Disclaimers</p>\n        <hr class=\"my-4\">\n        <p style=\"font-size:larger\">\n            MidMatch is not affiliated with USNA, DoD, the US Government, or any organizational bodies therein.\n            <br>\n            The only information collected by MidMatch is the information submitted by the user, of which the user is the sole owner.\n            <br>\n            Collected information is stored in a private database.\n            <br>\n            Development of MidMatch did not utilize any government computer or mission network.\n            <br>\n            MidMatch is hosted on privately funded infrastructure, and does not rely on any government system to render, display, or store website data.\n\n        </p>\n      </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { UserserviceService } from '../userservice.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  email: String;\n  password: String;\n\n  constructor(\n    private authService: UserserviceService,\n    private router: Router,\n    private flashMessage: FlashMessagesService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onLoginSubmit(){\n    const user = {\n      email: this.email,\n      password: this.password\n    }\n    this.email = \"\"\n    this.password = \"\"\n    this.authService.authenticateUser(user).subscribe(data => {\n      if(data.success){\n        this.authService.storeUserData(data.token, data.user);\n        this.flashMessage.show('You are now logged in', {cssClass: 'alert-success', timeout: 5000});\n        this.router.navigate(['user'])\n      } else {\n        this.flashMessage.show('Something went wrong: ' + data.msg, {cssClass: 'alert-danger', timeout: 5000})\n        this.router.navigate(['login'])\n      }\n    })\n  }\n\n}\n","<app-navbar></app-navbar>\n<flash-messages></flash-messages>\n<main class=\"py-4\">\n    <div class=\"containter autosize\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                Login\n            </div>\n            <div class=\"card-body\">\n                <form (submit)=\"onLoginSubmit()\" >\n                    <div class=\"form-group\">\n                      <label for=\"email\">Email</label>\n                      <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\" Enter Email\">\n                    </div>\n                    <div class=\"form-group\">\n                      <label for=\"password\">Password</label>\n                      <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\" id=\"password\" placeholder=\" Enter Password\">\n                    </div>\n                    <input type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!email || !password\" value=\"Submit\"> <a [routerLink]=\"['/resetRequest']\" style=\"padding-left: 10px;\">Forgot Password/Resend Verification Email</a>\n                  </form>\n            </div>\n        </div>\n    </div>\n</main>\n","import { Component, OnInit } from '@angular/core';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { UserserviceService } from '../userservice.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n    public authService: UserserviceService,\n    private router: Router,\n    private flashMessge: FlashMessagesService) { }\n\n  ngOnInit(): void {\n  }\n\n  onLogoutClick(){\n    this.authService.logout()\n    this.flashMessge.show(\n      'Logged out',\n      {cssClass: 'alert-success', timeout: 3000}\n    )\n    this.router.navigate(['/login'])\n    return false\n  }\n\n}\n","\n  <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <div class=\"container\">\n      <a class=\"navbar-brand\" href=\"#\">MidMatch</a>\n      <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor03\" aria-controls=\"navbarColor03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n    \n      <div class=\"collapse navbar-collapse\" id=\"navbarColor03\">\n        <ul class=\"navbar-nav mr-auto\">\n          <li class=\"nav-item\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions] = \"{exact:true}\">\n            <a class=\"nav-link\" [routerLink]=\"['/']\">Home </a>\n          </li>\n          <li class=\"nav-item\" *ngIf=\"authService.loggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions] = \"{exact:true}\">\n            <a class=\"nav-link\" [routerLink]=\"['/user']\">Match </a>\n          </li>\n          <li class=\"nav-item\" *ngIf=\"!authService.loggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions] = \"{exact:true}\">\n            <a class=\"nav-link\" [routerLink]=\"['/login']\">Login </a>\n          </li>\n          <li class=\"nav-item\" *ngIf=\"!authService.loggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions] = \"{exact:true}\">\n            <a class=\"nav-link\" [routerLink]=\"['/register']\">Register</a>\n          </li>\n          <li class=\"nav-item\" *ngIf=\"authService.loggedIn()\"><a class=\"nav-link\" (click)=\"onLogoutClick()\" href=\"#\">Logout</a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from '../validate.service';\nimport { AuthGuard } from '../auth.guard';\nimport { UserserviceService } from '../userservice.service';\nimport { Router } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  email: String;\n  emailconf: String;\n  password: String;\n  passwordconf: String;\n\n\n  constructor(\n    private validateService: ValidateService,\n    private authService: UserserviceService,\n    private router: Router,\n    private flashMessage: FlashMessagesService) { }\n\n  ngOnInit(): void {\n  }\n  onRegisterSubmit(){\n    const user = {\n      email: this.email,\n      password: this.password,\n      code: null,\n      class: null\n\n    }\n    var email = this.email\n    var password = this.password\n    var emailconf = this.emailconf\n    var passwordconf = this.passwordconf\n    this.email = \"\"\n    this.password = \"\"\n    this.emailconf = \"\"\n    this.passwordconf = \"\"\n\n    if(!this.validateService.validateRegister(user)){\n      this.flashMessage.show(\"Please fill in all fields\", {cssClass: \"alert-danger\", timeout: 3000})\n      return false\n    }\n\n    if(!this.validateService.validateEmail(user.email)){\n      this.flashMessage.show(\"Please use a valid email\", {cssClass: 'alert-danger', timeout: 3000})\n      return false\n    }else{\n      user.code = email.match(/^m((21|22|23|24)[0-9]{4})@usna\\.edu$/)[1]\n      user.class = Number(email.match(/^m((21|22|23|24)[0-9]{4})@usna\\.edu$/)[2])\n    }\n\n    if(email !== emailconf){\n      this.flashMessage.show(\"Email confirmation does not match\", {cssClass: 'alert-danger', timeout:3000})\n      return false      \n    }\n\n    if(password !== passwordconf){\n      this.flashMessage.show(\"Password confirmation does not match\", {cssClass: 'alert-danger', timeout: 3000})\n      return false\n    }\n    this.authService.registerUser(user).subscribe(data => {\n      if(data.success){\n        this.flashMessage.show(\"User registered! Check your email to verify\", {cssClass: 'alert-success', timeout: 3000})\n      }\n      else{\n        this.flashMessage.show(\"Something went wrong: \" + data.msg, {cssClass: 'alert-danger', timeout: 3000})\n      }\n    },\n    (err) => {\n      this.flashMessage.show(\"Sending emails is currently unavailable due to high request volume!\", {cssClass: 'alert-danger', timeout:3000})\n    })\n\n  }\n\n}\n","<app-navbar></app-navbar>\n<flash-messages></flash-messages>\n<main class=\"py-4\">\n    <div class=\"containter autosize\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                Register\n            </div>\n            <div class=\"card-body\">\n                <form (submit)=\"onRegisterSubmit()\" >\n                    <div class=\"form-group\">\n                      <label for=\"email\">Email</label>\n                      <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\" Enter Email\">\n                      <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"emailconf\">Confirm Email</label>\n                        <input type=\"email\" [(ngModel)]=\"emailconf\" name=\"emailconf\" class=\"form-control\" id=\"emailconf\" aria-describedby=\"emailconfHelp\" placeholder=\" Confirm\">\n                    </div>\n                    <div class=\"form-group\">\n                      <label for=\"password\">Password</label>\n                      <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\" id=\"password\" placeholder=\" Enter Password\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"passwordconf\">Confirm Password</label>\n                        <input type=\"password\" [(ngModel)]=\"passwordconf\" name=\"passwordconf\" class=\"form-control\" id=\"passwordconf\" placeholder=\" Confirm\">\n                      </div>\n                    <input type=\"submit\" [disabled]=\"!email || !emailconf || !password || !passwordconf\" class=\"btn btn-primary\" value=\"Submit\">\n                  </form>\n            </div>\n        </div>\n    </div>\n</main>\n","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from '../validate.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { UserserviceService } from '../userservice.service';\n\n@Component({\n  selector: 'app-reset-request',\n  templateUrl: './reset-request.component.html',\n  styleUrls: ['./reset-request.component.css']\n})\nexport class ResetRequestComponent implements OnInit {\n  email: String;\n  constructor(private authService: UserserviceService,private validateService: ValidateService, private flashMessage: FlashMessagesService) { }\n\n  ngOnInit(): void {\n  }\n\n  onResetRequestSubmit(){\n    var email = this.email\n    this.email = \"\"\n    if(!this.validateService.validateEmail(email)){\n      this.flashMessage.show(\"Invalid email\", {cssClass: 'alert-danger', timeout: 3000})\n    }\n    else{\n      this.authService.resetRequest(email).subscribe(data => {\n        if(data.success){\n          this.flashMessage.show(\"Reset email sent!\", {cssClass: 'alert-success', timeout:3000})\n        }\n        else{\n          this.flashMessage.show(\"Something went wrong: \" + data.msg, {cssClass: 'alert-danger', timeout:3000})\n        }\n      },\n      (err) => {\n        this.flashMessage.show(\"Requests can only be performed every 4 seconds\", {cssClass: 'alert-danger', timeout:3000})\n      })\n    }\n  }\n\n}\n","<app-navbar></app-navbar>\n<flash-messages></flash-messages>\n<main class=\"py-4\">\n    <div class=\"containter autosize\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                Reset Password\n            </div>\n            <div class=\"card-body\">\n                <form (submit)=\"onResetRequestSubmit()\" >\n                    <div class=\"form-group\">\n                      <label for=\"email\">Email</label>\n                      <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\" Enter Email\">\n                    </div>\n                    <input type=\"submit\" [disabled]=\"!email\" class=\"btn btn-primary\" value=\"Submit\">\n                  </form>\n            </div>\n        </div>\n    </div>\n</main>\n","import { Component, OnInit } from '@angular/core';\nimport { UserserviceService } from '../userservice.service';\nimport { ValidateService } from '../validate.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-reset',\n  templateUrl: './reset.component.html',\n  styleUrls: ['./reset.component.css']\n})\nexport class ResetComponent implements OnInit {\n  email: String;\n  token: String;\n  password: String;\n  passwordconf: String;\n  constructor(private route: ActivatedRoute, private router: Router, private authService: UserserviceService,private validateService: ValidateService, private flashMessage: FlashMessagesService) { }\n\n  ngOnInit(): void {\n    this.route.queryParamMap.subscribe(params => {\n      this.email = params.get('email')\n      this.token = params.get('token')\n    })\n  }\n\n  onResetSubmit(){\n    var email = this.email\n    var password = this.password\n    var passwordconf = this.password\n    this.email = \"\"\n    this.password = \"\"\n    this.passwordconf = \"\"\n    if(password == undefined){\n      this.flashMessage.show(\"Please enter a password\", {cssClass: 'alert-danger', timeout: 3000})\n    } else if (email == undefined || this.token == undefined){\n      this.flashMessage.show(\"Invalid reset link!\", {cssClass: 'alert-danger', timeout: 3000})\n    } else if (password !== passwordconf){\n      this.flashMessage.show(\"Passwords do not match!\", {cssClass: 'alert-danger', timeout: 3000})\n    }\n    else{\n      this.authService.reset(email, this.token, password).subscribe(data => {\n        if(data.success){\n          this.flashMessage.show(\"Password reset successfully\", {cssClass: 'alert-success', timeout: 3000})\n          this.router.navigate(['login'])\n        } else {\n          this.flashMessage.show(\"Something went wrong: \" + data.msg, {cssClass: 'alert-danger', timeout: 3000})\n        }\n      },\n      (err) => {\n        this.flashMessage.show(\"Requests can only be performed every 4 seconds\", {cssClass: 'alert-danger', timeout:3000})\n      })\n    }\n  }\n\n}\n","<app-navbar></app-navbar>\n<flash-messages></flash-messages>\n<main class=\"py-4\">\n    <div class=\"containter autosize\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                Reset Password\n            </div>\n            <div class=\"card-body\">\n                <form (submit)=\"onResetSubmit()\" >\n                    <div class=\"form-group\">\n                      <label for=\"email\">Email</label>\n                      <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\" Enter Email\">\n                    </div>\n                    <div class=\"form-group\">\n                      <label for=\"password\">Password</label>\n                      <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\" id=\"password\" placeholder=\" Enter Password\">\n                    </div>\n                    <div class=\"form-group\">\n                      <label for=\"passwordconf\">Confirm Password</label>\n                      <input type=\"password\" [(ngModel)]=\"passwordconf\" name=\"passwordconf\" class=\"form-control\" id=\"passwordconf\" placeholder=\" Confirm\">\n                    </div>\n                    <input type=\"submit\" [disabled]=\"!password || !email || !passwordconf\" class=\"btn btn-primary\" value=\"Submit\">\n                  </form>\n            </div>\n        </div>\n    </div>\n</main>\n","import { Component, OnInit } from '@angular/core';\nimport { UserserviceService } from '../userservice.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n  destination: String;\n  user: Object;\n  constructor(private authService: UserserviceService, private flashMessage: FlashMessagesService) { }\n\n  ngOnInit(): void {\n    this.user = this.authService.getUser()\n  }\n\n  onCrushSubmit(){\n    var dest = this.destination\n    this.destination = \"\"\n    if(dest == undefined || dest.search(/^((21|22|23|24)[0-9]{4})$/)){ \n      this.flashMessage.show(\"Invalid input!\", {cssClass:'alert-danger', timeout: 3000})\n      return\n    }\n    this.authService.like(dest).subscribe(data => {\n      if(data.success){\n        this.flashMessage.show(\"Crush submitted!\", {cssClass:'alert-success', timeout:3000})\n      } else {\n        this.flashMessage.show(\"Something went wrong: \" + data.msg, {cssClass: 'alert-danger', timeout: 3000})\n      }\n    },\n    (err) => {\n      this.flashMessage.show(\"Requests can only be performed every 4 seconds\", {cssClass: 'alert-danger', timeout:3000})\n    })\n\n  }\n}\n","<app-navbar></app-navbar>\n<flash-messages></flash-messages>\n<div class=\"container autosize\">\n    <form (submit)=\"onCrushSubmit()\">\n        <div class=\"form-group\">\n            <label for=\"destination\">Send a crush!</label>\n            <input type=\"text\" [(ngModel)]=\"destination\" name=\"destination\" class=\"form-control\" id=\"destination\" placeholder=\"XXXXXX\">\n        </div>\n\n        <input type=\"submit\" [disabled]=\"!destination\" class=\"btn btn-danger btn-large\" value=\"Submit\">\n    </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Http, Headers, HttpModule } from '@angular/http'\nimport { tokenNotExpired } from 'angular2-jwt'\nimport { map, timeout } from \"rxjs/operators\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserserviceService {\n  authToken: any;\n  user: any;\n  isDev: boolean;\n  appserver: any;\n\n  constructor(private http: Http) {\n      this.appserver = ''\n  }\n  \n  registerUser(user){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json')\n    return this.http.post(this.appserver + 'users/register', user, {headers: headers}).pipe(timeout(3000)).pipe(map(res => res.json()))\n  }\n\n  authenticateUser(user){\n    let headers = new Headers()\n    headers.append('Content-Type', 'application/json')\n    return this.http.post(this.appserver + 'users/authenticate', user, {headers: headers}).pipe(timeout(3000)).pipe(map(res=>res.json()))\n  }\n  \n  storeUserData(token, user){\n    localStorage.setItem('id_token', token)\n    localStorage.setItem('user', JSON.stringify(user))\n    this.authToken = token;\n    this.user = user;\n  }\n  getUser(){\n    return localStorage.getItem('user')\n  }\n\n  like(destCode){\n    let headers = new Headers()\n    this.loadToken()\n    headers.append('Authorization', this.authToken)\n    headers.append('Content-type', 'application/json')\n    return this.http.post(this.appserver + 'users/like', {receiver: destCode}, {headers: headers}).pipe(timeout(3000)).pipe(map(res=>res.json()))\n  }\n\n  resetRequest(email){\n    let headers = new Headers()\n    headers.append('Content-type', 'application/json')\n    return this.http.post(this.appserver + 'users/sendReset', {email: email}, {headers: headers}).pipe(timeout(3000)).pipe(map(res=>res.json()))\n  }\n\n  reset(email, token, password){\n    let headers = new Headers()\n    headers.append('Content-type', 'application/json')\n    return this.http.post(this.appserver + 'users/reset', {email: email, string: token, password: password}, {headers: headers}).pipe(timeout(3000)).pipe(map(res=>res.json()))\n  }\n\n\n  loadToken(){\n    const token = localStorage.getItem('id_token')\n    this.authToken = token\n  }\n\n  loggedIn(){\n    return tokenNotExpired('id_token')\n  }\n\n  logout(){\n    this.authToken = null\n    this.user = null\n    localStorage.clear()\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n  validateRegister(user) {\n    if(user.email == undefined || user.password == undefined) {\n        return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateEmail(email) {\n    const re = /^m((21|22|23|24)[0-9]{4})@usna\\.edu$/;\n    return re.test(email);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}